apiVersion: v1
kind: Namespace
metadata:
  name: claude-automation
  labels:
    name: claude-automation
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: claude-monitor
  namespace: claude-automation
  labels:
    app: claude-automation
    component: monitor
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: claude-monitor-role
  namespace: claude-automation
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "pods/exec"]
  verbs: ["get", "list", "create", "delete", "watch"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "create", "delete"]
- apiGroups: [""]
  resources: ["secrets", "configmaps"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: claude-monitor-binding
  namespace: claude-automation
subjects:
- kind: ServiceAccount
  name: claude-monitor
  namespace: claude-automation
roleRef:
  kind: Role
  name: claude-monitor-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: claude-monitor-config
  namespace: claude-automation
  labels:
    app: claude-automation
    component: monitor
data:
  polling_interval: "30s"
  max_workers: "5"
  cleanup_interval: "1h"
  max_pod_age: "24h"
  log_level: "info"
---
apiVersion: v1
kind: Secret
metadata:
  name: claude-auth
  namespace: claude-automation
  labels:
    app: claude-automation
    component: auth
type: Opaque
data:
  # Base64 encoded authentication files
  # These should be populated with actual auth data
  claude-config: ""  # .claude.json
  credentials: ""    # .credentials.json
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: claude-monitor
  namespace: claude-automation
  labels:
    app: claude-automation
    component: monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: claude-automation
      component: monitor
  template:
    metadata:
      labels:
        app: claude-automation
        component: monitor
    spec:
      serviceAccountName: claude-monitor
      restartPolicy: Always
      containers:
      - name: monitor
        image: claude-automation:latest
        command: ["/app/bin/monitor"]
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POLLING_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: claude-monitor-config
              key: polling_interval
        - name: MAX_WORKERS
          valueFrom:
            configMapKeyRef:
              name: claude-monitor-config
              key: max_workers
        - name: CLEANUP_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: claude-monitor-config
              key: cleanup_interval
        - name: MAX_POD_AGE
          valueFrom:
            configMapKeyRef:
              name: claude-monitor-config
              key: max_pod_age
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: claude-monitor-config
              key: log_level
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: github-credentials
              key: token
        volumeMounts:
        - name: claude-auth
          mountPath: /app/auth
          readOnly: true
        - name: workspaces
          mountPath: /app/workspaces
        - name: sessions
          mountPath: /app/sessions
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: claude-auth
        secret:
          secretName: claude-auth
      - name: workspaces
        persistentVolumeClaim:
          claimName: claude-workspaces
      - name: sessions
        persistentVolumeClaim:
          claimName: claude-sessions
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: claude-workspaces
  namespace: claude-automation
  labels:
    app: claude-automation
    component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: claude-sessions
  namespace: claude-automation
  labels:
    app: claude-automation
    component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: claude-monitor
  namespace: claude-automation
  labels:
    app: claude-automation
    component: monitor
spec:
  selector:
    app: claude-automation
    component: monitor
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP